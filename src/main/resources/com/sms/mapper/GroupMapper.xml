<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sms.dao.GroupMapper" >
  <resultMap id="BaseResultMap" type="com.sms.model.Group" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="branch_school_id" property="branchSchoolId" jdbcType="INTEGER" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, branch_school_id, start_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from `group` 
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `group` 
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sms.model.Group" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `group`  (id, name, branch_school_id, 
      start_date)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{branchSchoolId,jdbcType=INTEGER}, 
      #{startDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.sms.model.Group" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `group` 
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="branchSchoolId != null" >
        branch_school_id,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="branchSchoolId != null" >
        #{branchSchoolId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sms.model.Group" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `group` 
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="branchSchoolId != null" >
        branch_school_id = #{branchSchoolId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sms.model.Group" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `group` 
    set name = #{name,jdbcType=VARCHAR},
      branch_school_id = #{branchSchoolId,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from `group`  
    where name = #{name,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByBranchSchoolIdAndPageAndAsc" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" /> 
    from `group`  
    <![CDATA[ where id > #{pageStartId,jdbcType=BIGINT} ]]> 
    and branch_school_id = #{branchSchoolId,jdbcType=INTEGER} 
    order by id ASC limit #{countPerPage,jdbcType=BIGINT} 
  </select>
  
  <select id="selectByBranchSchoolIdAndPageAndDesc" resultMap="BaseResultMap" parameterType="map">
    select 
    <include refid="Base_Column_List" /> 
    from 
    (
    	select 
    	<include refid="Base_Column_List" />
    	from `group`   
    	<![CDATA[ where id < #{pageEndId,jdbcType=BIGINT} ]]> 
    	and branch_school_id = #{branchSchoolId,jdbcType=INTEGER} 
    	order by id DESC limit #{countPerPage,jdbcType=BIGINT} 
    ) SQ 
    order by SQ.id ASC
  </select>
  
  <select id="getCountByBranchSchoolId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select count(1) 
    from `group`   
    where branch_school_id = #{branchSchoolId,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByIds" resultMap="BaseResultMap" >
  	select 
    <include refid="Base_Column_List" />
    from `group`  
	where id in  
	<foreach collection="ids" item="id" open="(" close=")" separator=",">
      #{id,jdbcType=INTEGER}
	</foreach>
  </select>
  
  <select id="selectGroupLeaderNamesByGroupIds" resultType="com.sms.model.GenericItem" >
    select A.group_id as id, U.name as stringData, null as integerData  
    from user U 
    inner join user_role_association A ON U.id = A.user_id 
    where A.role_id = 3 
    and A.group_id in 
	<foreach collection="groupIds" item="groupId" open="(" close=")" separator=",">
      #{groupId,jdbcType=INTEGER}
	</foreach>
  </select>
  
  <select id="selectGroupLeaderTelephoneNumbersByGroupIds" resultType="com.sms.model.GenericItem" >
    select A.group_id as id, U.telephone_number as stringData, null as integerData  
    from user U 
    inner join user_role_association A ON U.id = A.user_id 
    where A.role_id = 3 
    and A.group_id in 
	<foreach collection="groupIds" item="groupId" open="(" close=")" separator=",">
      #{groupId,jdbcType=INTEGER}
	</foreach>
  </select>
  
  <select id="selectMemberCountByGroupIds" resultType="com.sms.model.GenericItem" >
    select M.group_id as id, null as stringData, COUNT(*) as integerData   
    from member M 
	where M.group_id  in 
	<foreach collection="groupIds" item="groupId" open="(" close=")" separator=",">  
	  #{groupId,jdbcType=INTEGER}  
	</foreach> 
	group by M.group_Id 
  </select>
  
  <select id="selectByBranchSchoolId" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from `group`   
    where branch_school_id = #{branchSchoolId,jdbcType=INTEGER} 
    order by id ASC 
  </select>
  
</mapper>