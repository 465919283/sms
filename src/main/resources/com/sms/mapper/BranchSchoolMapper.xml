<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sms.dao.BranchSchoolMapper" >
  <resultMap id="BaseResultMap" type="com.sms.model.BranchSchool" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="school_id" property="schoolId" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="telephone_number" property="telephoneNumber" jdbcType="VARCHAR" />
    <result column="monitor_open_days_of_week" property="monitorOpenDaysOfWeek" jdbcType="VARCHAR" />
    <result column="monitor_start_time" property="monitorStartTime" jdbcType="TIME" />
    <result column="monitor_end_time" property="monitorEndTime" jdbcType="TIME" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, school_id, address, telephone_number, monitor_open_days_of_week, monitor_start_time, 
    monitor_end_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from branch_school
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from branch_school
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sms.model.BranchSchool" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into branch_school (id, name, school_id, 
      address, telephone_number, monitor_open_days_of_week, 
      monitor_start_time, monitor_end_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{schoolId,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{telephoneNumber,jdbcType=VARCHAR}, #{monitorOpenDaysOfWeek,jdbcType=VARCHAR}, 
      #{monitorStartTime,jdbcType=TIME}, #{monitorEndTime,jdbcType=TIME})
  </insert>
  <insert id="insertSelective" parameterType="com.sms.model.BranchSchool" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into branch_school
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="telephoneNumber != null" >
        telephone_number,
      </if>
      <if test="monitorOpenDaysOfWeek != null" >
        monitor_open_days_of_week,
      </if>
      <if test="monitorStartTime != null" >
        monitor_start_time,
      </if>
      <if test="monitorEndTime != null" >
        monitor_end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="telephoneNumber != null" >
        #{telephoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="monitorOpenDaysOfWeek != null" >
        #{monitorOpenDaysOfWeek,jdbcType=VARCHAR},
      </if>
      <if test="monitorStartTime != null" >
        #{monitorStartTime,jdbcType=TIME},
      </if>
      <if test="monitorEndTime != null" >
        #{monitorEndTime,jdbcType=TIME},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sms.model.BranchSchool" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update branch_school
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="telephoneNumber != null" >
        telephone_number = #{telephoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="monitorOpenDaysOfWeek != null" >
        monitor_open_days_of_week = #{monitorOpenDaysOfWeek,jdbcType=VARCHAR},
      </if>
      <if test="monitorStartTime != null" >
        monitor_start_time = #{monitorStartTime,jdbcType=TIME},
      </if>
      <if test="monitorEndTime != null" >
        monitor_end_time = #{monitorEndTime,jdbcType=TIME},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sms.model.BranchSchool" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update branch_school
    set name = #{name,jdbcType=VARCHAR},
      school_id = #{schoolId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      telephone_number = #{telephoneNumber,jdbcType=VARCHAR},
      monitor_open_days_of_week = #{monitorOpenDaysOfWeek,jdbcType=VARCHAR},
      monitor_start_time = #{monitorStartTime,jdbcType=TIME},
      monitor_end_time = #{monitorEndTime,jdbcType=TIME}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from branch_school 
    where name = #{name,jdbcType=VARCHAR}
  </select>
  
  <select id="selectBySchoolIdAndPageAndAsc" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from branch_school 
    <![CDATA[ where id > #{pageStartId,jdbcType=BIGINT} ]]> 
    and school_id = #{schoolId,jdbcType=INTEGER} 
    order by id ASC limit #{countPerPage,jdbcType=BIGINT}
  </select>
  
  <select id="selectBySchoolIdAndPageAndDesc" resultMap="BaseResultMap" parameterType="map">
    select 
    <include refid="Base_Column_List" />
    from
    (
    	select 
    	<include refid="Base_Column_List" />
    	from branch_school  
    	<![CDATA[ where id < #{pageEndId,jdbcType=BIGINT} ]]> 
    	and school_id = #{schoolId,jdbcType=INTEGER} 
    	order by id DESC limit #{countPerPage,jdbcType=BIGINT} 
    ) SQ 
    order by SQ.id ASC
  </select>
  
  <select id="getCountBySchoolId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select count(1) 
    from branch_school  
    where school_id = #{schoolId,jdbcType=INTEGER} 
  </select>
  
  <select id="selectByIds" resultMap="BaseResultMap" >
  	select 
    <include refid="Base_Column_List" />
    from branch_school 
	where id in  
	<foreach collection="ids" item="id" open="(" close=")" separator=",">
      #{id,jdbcType=INTEGER}
	</foreach>
  </select>
  
  <select id="selectDirectorNamesByBranchSchoolIds" resultType="com.sms.model.GenericItem" >
    select A.branch_school_id as id, U.name as stringData, null as integerData  
    from user U 
    inner join user_role_association A ON U.id = A.user_id 
    where A.role_id = 2 
    and A.group_id is null 
    and A.branch_school_id in 
	<foreach collection="branchSchoolIds" item="branchSchoolId" open="(" close=")" separator=",">
      #{branchSchoolId,jdbcType=INTEGER}
	</foreach>
  </select>
  
  <select id="selectGroupCountByBranchSchoolIds" resultType="com.sms.model.GenericItem" >
    select G.branch_school_id as id, null as stringData, COUNT(*) as integerData   
    from `group` G 
	where G.branch_school_id in 
	<foreach collection="branchSchoolIds" item="branchSchoolId" open="(" close=")" separator=",">  
	  #{branchSchoolId,jdbcType=INTEGER}  
	</foreach> 
	group by G.branch_school_id 
  </select>
  
  <select id="selectBySchoolId" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from branch_school 
    where school_id = #{schoolId,jdbcType=INTEGER} 
    order by id ASC 
  </select>
  
</mapper>