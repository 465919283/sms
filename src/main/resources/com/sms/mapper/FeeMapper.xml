<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sms.dao.FeeMapper" >
  <resultMap id="BaseResultMap" type="com.sms.model.Fee" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="fee_type_id" property="feeTypeId" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="school_id" property="schoolId" jdbcType="INTEGER" />
    <result column="branch_school_id" property="branchSchoolId" jdbcType="INTEGER" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="management_status_id" property="managementStatusId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, fee_type_id, course_id, school_id, branch_school_id, group_id, member_id, 
    price, management_status_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from fee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from fee
    where fee_type_id = #{feeTypeId,jdbcType=INTEGER} order by id desc;
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from fee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sms.model.Fee" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into fee (id, name, fee_type_id, course_id, school_id, branch_school_id, group_id, member_id,
      price, management_status_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{feeTypeId,jdbcType=INTEGER},#{courseId},
      #{schoolId}, #{branchSchoolId}, #{groupId}, #{memberId}, #{price,jdbcType=DECIMAL}, #{managementStatusId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sms.model.Fee" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into fee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="feeTypeId != null" >
        fee_type_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="managementStatusId != null" >
        management_status_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="feeTypeId != null" >
        #{feeTypeId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="managementStatusId != null" >
        #{managementStatusId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sms.model.Fee" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update fee
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="feeTypeId != null" >
        fee_type_id = #{feeTypeId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="managementStatusId != null" >
        management_status_id = #{managementStatusId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sms.model.Fee" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update fee
    set name = #{name,jdbcType=VARCHAR},
      fee_type_id = #{feeTypeId,jdbcType=INTEGER},
      school_id = #{schoolId},
      branch_school_id = #{branchSchoolId},
      course_id = #{courseId},
      group_id = #{groupId},
      member_id = #{memberId},
      price = #{price,jdbcType=DECIMAL},
      management_status_id = #{managementStatusId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getCountByFeeTypeId" resultType="int">
    select count(1) from fee
    <where>
      <if test="feeTypeId != null">fee_type_id = #{feeTypeId}</if>
    </where>
  </select>
  <select id="selectByFeeTypeIdAndStartIdAndLimitAndAsc" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from fee
    where
    <![CDATA[ id > #{pageStartId,jdbcType=BIGINT}]]>
    <if test="feeTypeId != null"> and fee_type_id = #{feeTypeId}</if>
    order by id limit #{countPerPage}
  </select>
  <select id="selectByFeeTypeIdAndEndIdAndLimitAndDesc" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from
    (
    select
    <include refid="Base_Column_List" />
    from fee
    where <![CDATA[ id < #{pageEndId,jdbcType=BIGINT}]]>
    <if test="feeTypeId != null"> and fee_type_id = #{feeTypeId}</if>
    order by id desc limit #{countPerPage}
    ) U
    order by U.id ASC
  </select>
</mapper>